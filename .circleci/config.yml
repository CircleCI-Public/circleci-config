version: 2.1

setup: true

orbs:
  continuation: circleci/continuation@0.3.1
  snyk: snyk/snyk@2.2.0

executors:
  go:
    docker:
      - image: cimg/go:1.20
    environment:
      CGO_ENABLED: 0

jobs:
  infer-own-config:
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - restore_cache:
          key: go-mod-{{ checksum "go.sum" }}
      - run:
          name: Download Go modules
          command: go mod download
      - save_cache:
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod
      - run:
          name: Run inference CLI
          command: go run ./cmd/inferconfig/inferconfig.go  > ./config.yml
      - run:
          name: Check we got expected config
          command: diff ./config.yml cmd/inferconfig/testdata/expected/dogfood.yml
      - continuation/continue:
          configuration_path: ./config.yml
  validate-inferred-configs:
    docker:
        - image: circleci/circleci-cli
    steps:
      - checkout
      - run:
          name: Validate inferred configs
          command: |
            set -e
            for file in ./cmd/inferconfig/testdata/expected/*; do
                circleci config validate "$file"
            done
  test:
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - restore_cache:
          key: go-mod-{{ checksum "go.sum" }}
      - run:
          name: Download Go modules
          command: go mod download
      - save_cache:
          key: go-mod-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod
      - run:
          name: Run tests
          command: gotestsum --junitfile junit.xml
      - store_test_results:
          path: junit.xml
  build-and-push-docker-image:
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - restore_cache:
          key: go-mod-{{ checksum "go.sum" }}
      - run:
          name: Build inferconfig CLI
          command: go build -o out/circleci-inferconfig ./cmd/inferconfig
      - setup_remote_docker
      - run:
          name: Docker Login
          command: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      - run:
          name: Build docker image
          command: |
            docker build -t circleci/circleci-inferconfig:0.$CIRCLE_BUILD_NUM .
            docker tag      circleci/circleci-inferconfig:0.$CIRCLE_BUILD_NUM circleci/circleci-inferconfig:latest
      - run:
          name: Push docker image
          command: |
            docker push circleci/circleci-inferconfig:0.$CIRCLE_BUILD_NUM
            docker push circleci/circleci-inferconfig:latest

  vulnerability-scan:
    executor: go
    steps:
      - checkout
      - run:
          name: Launching Snyk Orb Scanning
          command: echo "Running snyk/scan and displaying the results"
      - snyk/scan:
          organization: "circleci-public"
          fail-on-issues: true
          severity-threshold: high
          monitor-on-build: false
          additional-arguments: "--all-projects"

workflows:
  test-and-release:
    jobs:
      - test
      - infer-own-config
      - validate-inferred-configs
      - vulnerability-scan:
          context: org-global-employees
      - build-and-push-docker-image:
          requires:
            - test
            - vulnerability-scan
          filters:
            branches:
              only: main
          context:
            - image-publishing
